{"version":3,"sources":["Components/Section/Section.jsx","Components/FeedbackOptions/FeedbackOptions.js","Components/Statistics/Statistics.js","Components/Notification/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["Section","this","props","title","children","Component","FeedbackOptions","className","options","map","elem","onClick","e","onLeaveFeedback","name","type","Statistics","good","neutral","bad","total","percent","Notification","message","App","state","handelIncrement","target","setState","prevState","Math","round","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAYeA,E,4JARX,WAA0C,IAAD,yDAAZC,KAAKC,MAAzBC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SACZ,OAAO,qCACH,4BAAID,IACHC,S,GALSC,aCkBPC,E,4JAhBb,WAAU,IAAD,OACP,OACE,qBAAKC,UAAU,UAAf,SACGN,KAAKC,MAAMM,QAAQC,KAAI,SAACC,GAAD,OACtB,wBACEC,QAAS,SAACC,GAAD,OAAO,EAAKV,MAAMW,gBAAgBD,IAC3CE,KAAMJ,EACNK,KAAK,SAHP,SAKGL,a,GAViBL,aCuBfW,E,4JAvBb,WACE,MAA6Bf,KAAKC,MAA5Be,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,QAASC,EAArB,EAAqBA,IACrB,OACE,gCACE,6CACA,8BACG,CAAC,QADJ,UACoBF,KAEpB,8BACG,CAAC,WADJ,UACuBC,KAEvB,8BACG,CAAC,OADJ,UACmBC,KAEnB,sDAAyBlB,KAAKC,MAAMkB,SACpC,yDAEGnB,KAAKC,MAAMkB,MAAQ,EAAInB,KAAKC,MAAMmB,QAAU,EAF/C,c,GAhBiBhB,aCCViB,EAHM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KC2CEC,E,4MApCbC,MAAQ,CAAER,KAAM,EAAGC,QAAS,EAAGC,IAAK,EAAGC,MAAO,G,EAE9CM,gBAAkB,YAA2B,IAAdZ,EAAa,EAAvBa,OAAUb,KAC7B,EAAKc,SAAL,eAAiBd,EAAO,EAAKW,MAAMX,GAAQ,IAC3C,EAAKc,UAAS,SAACC,GACb,MAAO,CAAET,MAAOS,EAAUZ,KAAOY,EAAUX,QAAUW,EAAUV,S,4CAInE,WACE,MAAsClB,KAAKwB,MAAnCR,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAAKC,EAA5B,EAA4BA,MACtBC,EAAUS,KAAKC,MAAOd,EAAOG,EAAS,KAC5C,OACE,qBAAKb,UAAU,MAAf,SACE,eAAC,EAAD,CAASA,UAAU,aAAaJ,MAAM,wBAAtC,UACE,cAAC,EAAD,CACEK,QAAS,CAAC,OAAQ,UAAW,OAC7BK,gBAAiBZ,KAAKyB,kBAEvBT,EAAOC,EAAUC,IAAQ,EACxB,cAAC,EAAD,CAAcI,QAAQ,sBAEtB,cAAC,EAAD,CACEN,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,QAASA,a,GA5BLhB,aCKH2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.809673b4.chunk.js","sourcesContent":["import { Component } from \"react\"\r\n\r\nclass Section extends Component {\r\n\r\n    render({ title, children } = this.props) {\r\n        return <>\r\n            <p>{title}</p>\r\n            {children }\r\n               </>\r\n    }\r\n}\r\n\r\nexport default Section","// import { tsImportEqualsDeclaration } from \"@babel/types\"\r\nimport { Component } from 'react';\r\n\r\nclass FeedbackOptions extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"buttons\">\r\n        {this.props.options.map((elem) => (\r\n          <button\r\n            onClick={(e) => this.props.onLeaveFeedback(e)}\r\n            name={elem}\r\n            type=\"button\"\r\n          >\r\n            {elem}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default FeedbackOptions;\r\n","import { Component } from 'react';\r\n\r\nclass Statistics extends Component {\r\n  render() {\r\n    let { good, neutral, bad } = this.props;\r\n    return (\r\n      <div>\r\n        <h2>Statistics:</h2>\r\n        <p>\r\n          {['good']}:&ensp;{good}\r\n        </p>\r\n        <p>\r\n          {['neutral']}:&ensp;{neutral}\r\n        </p>\r\n        <p>\r\n          {['bad']}:&ensp;{bad}\r\n        </p>\r\n        <p>Total Feedback:&ensp;{this.props.total}</p>\r\n        <p>\r\n          Positive Feedback:&ensp;\r\n          {this.props.total > 0 ? this.props.percent : 0}%\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Statistics;\r\n","const Notification = ({ message }) => {\r\n  return <p>{message}</p>;\r\n};\r\nexport default Notification;\r\n","import { Component } from 'react';\nimport './App.scss';\nimport Section from './Components/Section/Section';\nimport FeedbackOptions from './Components/FeedbackOptions/FeedbackOptions.js';\nimport Statistics from './Components/Statistics/Statistics.js';\nimport Notification from './Components/Notification/Notification.js';\n\nclass App extends Component {\n  state = { good: 0, neutral: 0, bad: 0, total: 0 };\n\n  handelIncrement = ({ target: { name } }) => {\n    this.setState({ [name]: this.state[name] + 1 });\n    this.setState((prevState) => {\n      return { total: prevState.good + prevState.neutral + prevState.bad };\n    });\n  };\n\n  render() {\n    const { good, neutral, bad, total } = this.state;\n    const percent = Math.round((good / total) * 100);\n    return (\n      <div className=\"App\">\n        <Section className=\"App-header\" title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={['good', 'neutral', 'bad']}\n            onLeaveFeedback={this.handelIncrement}\n          />\n          {good + neutral + bad === 0 ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              percent={percent}\n            />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}