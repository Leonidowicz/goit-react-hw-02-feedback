{"version":3,"sources":["Components/Section/Section.jsx","Components/FeedbackOptions/FeedbackOptions.js","Components/Statistics/Statistics.js","Components/Notification/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["Section","this","props","title","children","Component","FeedbackOptions","className","options","map","elem","onClick","e","onLeaveFeedback","name","type","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","state","handelIncrement","target","setState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","_","isEmpty","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4SAYeA,E,4JARX,WAA0C,IAAD,yDAAZC,KAAKC,MAAzBC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SACZ,OAAO,qCACH,4BAAID,IACHC,S,GALSC,aCkBPC,E,4JAhBb,WAAU,IAAD,OACP,OACE,qBAAKC,UAAU,UAAf,SACGN,KAAKC,MAAMM,QAAQC,KAAI,SAACC,GAAD,OACtB,wBACEC,QAAS,SAACC,GAAD,OAAO,EAAKV,MAAMW,gBAAgBD,IAC3CE,KAAMJ,EACNK,KAAK,SAHP,SAKGL,a,GAViBL,aCwBfW,E,4JAxBb,WACE,MAAyCf,KAAKC,MAA9C,IAAMe,YAAN,MAAa,EAAb,MAAgBC,eAAhB,MAA0B,EAA1B,MAA6BC,WAA7B,MAAmC,EAAnC,EAEA,OACE,gCACE,6CACA,8BACG,CAAC,QADJ,UACoBF,KAEpB,8BACG,CAAC,WADJ,UACuBC,KAEvB,8BACG,CAAC,OADJ,UACmBC,KAEnB,sDAAyBlB,KAAKC,MAAMkB,WACpC,yDAEGnB,KAAKC,MAAMkB,QAAU,EAAInB,KAAKC,MAAMmB,qBAAuB,Y,GAnB7ChB,aCCViB,EAHM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KCkDEC,E,4MA1CbC,MAAQ,G,EACRC,gBAAkB,YAA2B,IAAdZ,EAAa,EAAvBa,OAAUb,KAC7B,EAAKW,MAAMX,GACP,EAAKc,SAAL,eAAiBd,EAAO,EAAKW,MAAMX,GAAQ,IAC3C,EAAKc,SAAL,eAAiBd,EAAO,K,EAG9Be,mBAAqB,wEAAsC,EAAKJ,MAA3C,IAAGR,YAAH,MAAU,EAAV,MAAaC,eAAb,MAAuB,EAAvB,MAA0BC,WAA1B,MAAgC,EAAhC,SACnBF,EAAOC,EAAUC,G,EAEnBW,gCAAkC,wEACrB,EAAKL,MAAdR,EAD8B,EAC9BA,KACFG,EAFgC,uDAExB,EAAKS,qBAFmB,OAG7BE,KAAKC,MAAOf,EAAOG,EAAS,M,4CAEjC,WACE,MAA2CnB,KAAKwB,MAAhD,IAAQR,YAAR,MAAe,EAAf,MAAkBC,eAAlB,MAA4B,EAA5B,MAA+BC,WAA/B,MAAqC,EAArC,EAEA,OACE,qBAAKZ,UAAU,MAAf,SACE,eAAC,EAAD,CAASA,UAAU,aAAaJ,MAAM,wBAAtC,UACE,cAAC,EAAD,CACEK,QAAS,CAAC,OAAQ,UAAW,OAC7BK,gBAAiBZ,KAAKyB,kBAEvBO,IAAEC,QAAQjC,KAAKwB,OACd,cAAC,EAAD,CAAcF,QAAQ,sBAEtB,cAAC,EAAD,CACEN,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOnB,KAAK4B,mBACZR,mBAAoBpB,KAAK6B,2C,GAlCrBzB,aCIH8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.d5697587.chunk.js","sourcesContent":["import { Component } from \"react\"\r\n\r\nclass Section extends Component {\r\n\r\n    render({ title, children } = this.props) {\r\n        return <>\r\n            <p>{title}</p>\r\n            {children }\r\n               </>\r\n    }\r\n}\r\n\r\nexport default Section","// import { tsImportEqualsDeclaration } from \"@babel/types\"\r\nimport { Component } from 'react';\r\n\r\nclass FeedbackOptions extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"buttons\">\r\n        {this.props.options.map((elem) => (\r\n          <button\r\n            onClick={(e) => this.props.onLeaveFeedback(e)}\r\n            name={elem}\r\n            type=\"button\"\r\n          >\r\n            {elem}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default FeedbackOptions;\r\n","import { Component } from 'react';\r\n\r\nclass Statistics extends Component {\r\n  render() {\r\n    let { good = 0, neutral = 0, bad = 0 } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <h2>Statistics:</h2>\r\n        <p>\r\n          {['good']}:&ensp;{good}\r\n        </p>\r\n        <p>\r\n          {['neutral']}:&ensp;{neutral}\r\n        </p>\r\n        <p>\r\n          {['bad']}:&ensp;{bad}\r\n        </p>\r\n        <p>Total Feedback:&ensp;{this.props.total()}</p>\r\n        <p>\r\n          Positive Feedback:&ensp;\r\n          {this.props.total() > 0 ? this.props.positivePercentage() : 0}\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Statistics;\r\n","const Notification = ({ message }) => {\r\n  return <p>{message}</p>;\r\n};\r\nexport default Notification;\r\n","import { Component } from 'react';\nimport _ from 'lodash';\nimport './App.scss';\nimport Section from './Components/Section/Section';\nimport FeedbackOptions from './Components/FeedbackOptions/FeedbackOptions.js';\nimport Statistics from './Components/Statistics/Statistics.js';\nimport Notification from './Components/Notification/Notification.js';\n\nclass App extends Component {\n  state = {};\n  handelIncrement = ({ target: { name } }) => {\n    this.state[name]\n      ? this.setState({ [name]: this.state[name] + 1 })\n      : this.setState({ [name]: 1 });\n  };\n\n  countTotalFeedback = ({ good = 0, neutral = 0, bad = 0 } = this.state) =>\n    good + neutral + bad;\n\n  countPositiveFeedbackPercentage = (\n    { good } = this.state,\n    total = this.countTotalFeedback()\n  ) => Math.round((good / total) * 100);\n\n  render() {\n    const { good = 0, neutral = 0, bad = 0 } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Section className=\"App-header\" title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={['good', 'neutral', 'bad']}\n            onLeaveFeedback={this.handelIncrement}\n          ></FeedbackOptions>\n          {_.isEmpty(this.state) ? (\n            <Notification message=\"No feedback given\"></Notification>\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback}\n              positivePercentage={this.countPositiveFeedbackPercentage}\n            ></Statistics>\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}